# No need to explicitly write this on your .gitlab-ci.yml file.
# Add and edit if you want different stage configurations.
#image: mjomaadocker/php:latest
# No need to explicitly write this on your .gitlab-ci.yml file.
# Add and edit if you want different stage configurations.
image: mjomaadocker/dev/php:latest
variables:

  DOCKER_HOST: tcp://docker:2375
  #
  # This instructs Docker not to start over TLS.
  DOCKER_TLS_CERTDIR: ""

services:
  - docker:20.10.16-dind

#before_script:
#  - docker info
stages:
  - docker_build_dev
  - build
  - test
  - deploy
docker_build_dev:
  image: docker:20.10.16
  stage: docker_build
  script:
    - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD
    - docker build -t mjomaadocker/dev/php:latest .
    - docker push mjomaadocker/dev/php:latest  
#  only:
 #   changes:
 #   - Dockerfile  
  #    - "**/*.js"
composer:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}-composer
    paths:
      - vendor/
  script:     
      - composer update
      - cp .env.example .env
      - php artisan key:generate
  artifacts:
    expire_in: 1 month
    paths:
      - vendor/
      - .env

npm:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}-npm
    paths:
      - node_modules/
  script:
      - npm install
      - npm run development
  artifacts:
    expire_in: 1 month
    paths:
      - node_modules/
      - public/css/
      - public/js/

#codestyle:
 # stage: test
 # dependencies: []
 # script:
  #  - phpcs --standard=PSR2 --extensions=php --ignore=app/Support/helpers.php app
    
phpunit:
  stage: test
  dependencies:
    - composer
  script:
    - phpunit --coverage-text --colors=never


docker_build_prod:
  image: docker:20.10.16
  stage: deploy
  script:
    - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD
    - docker build -t mjomaadocker/prod/php:latest .
    - docker push mjomaadocker/prod/php:latest  
