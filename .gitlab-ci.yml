image: mjomaadocker/dev_php:latest
variables:

  DOCKER_HOST: tcp://docker:2375
  #
  # This instructs Docker not to start over TLS.
  DOCKER_TLS_CERTDIR: ""

services:
  - docker:20.10.16-dind

#before_script:
#  - docker info
stages:
  - docker_build_dev
  - build
  - test
  - ECR_build_prod
  - deploy
docker_build_dev:
  image: docker:20.10.16
  stage: docker_build_dev
  script:
    - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD
    - docker build -t mjomaadocker/dev_php:latest .
    - docker push mjomaadocker/dev_php:latest 
    - docker tag mjomaadocker/dev_php:latest 977254184182.dkr.ecr.us-east-2.amazonaws.com/mjomaaphp:latest 
    - mkdir image
    - docker save mjomaadocker/dev_php:latest 977254184182.dkr.ecr.us-east-2.amazonaws.com/mjomaaphp:latest  > image/app.tar
  artifacts:
    paths:
      - image
   
#  only:
 #   changes:
 #   - Dockerfile  
  #    - "**/*.js"
composer:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}-composer
    paths:
      - vendor/
  script:     
      - composer update
      - cp .env.example .env
      - php artisan key:generate
  artifacts:
    expire_in: 1 month
    paths:
      - vendor/
      - .env
    exclude:
      - image  

npm:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}-npm
    paths:
      - node_modules/
  script:
    - ls
     # - npm install
     #- npm run development
  artifacts:
    expire_in: 1 month
    exclude:
      - image 
    paths:
      - node_modules/
      - public/css/
      - public/js/

#codestyle:
 # stage: test
 # dependencies: []
 # script:
  #  - phpcs --standard=PSR2 --extensions=php --ignore=app/Support/helpers.php app
    
phpunit:
  stage: test
  dependencies:
    - composer
  script:
    - phpunit --coverage-text --colors=never
  artifacts:
    exclude:
      - "*"


deploy:
  stage: ECR_build_prod
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  artifacts:
    paths:
      - image 
  script:
   - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 977254184182.dkr.ecr.us-east-2.amazonaws.com
   - docker build -t mjomaaphp:latest 977254184182.dkr.ecr.us-east-2.amazonaws.com/mjomaaphp:latest .
   - docker image rm mjomaaphp:latest 977254184182.dkr.ecr.us-east-2.amazonaws.com/mjomaaphp:latest
   - docker load -i image/app.tar
   - docker push 977254184182.dkr.ecr.us-east-2.amazonaws.com/mjomaaphp:latest -d app

#docker_build_prod:
 # image: docker:20.10.16
  #stage: docker_build_prod
  #script:
  #  - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD
   # - docker build -t mjomaadocker/prod_php:latest .
    #- docker push mjomaadocker/prod_php:latest  

